---
import MainLayout from "../../layout/MainLayout.astro";
import type { Product } from "../../types/Product.ts";
import type { APIPagebleResponse } from "../../types/APIPagebleResponse.ts";
import Pagination from "../../components/Pagination.astro";
import SearchBar from "../../components/filter-tools/SearchBar.tsx";
import AdvancedFilters from "../../components/filter-tools/AdvancedFilters.tsx";
import AdvancedFiltersButton from "../../components/filter-tools/AdvancedFiltersButton.tsx";
import { priceFormatter } from "../../utils/formatters";
const incomingSearchParams = Astro.url.searchParams;
const apiParams = new URLSearchParams();
incomingSearchParams.forEach((value, key) => {
    apiParams.append(key, value);
});

const API_BASE_URL = 'http://localhost:8090/api/v1/products';
const API_URL = `${API_BASE_URL}?${apiParams.toString()}`;

let products: Product[] = [];
let currentPage = 1;
let totalPages = 0;
let pageSize = 8;

try {
  const response = await fetch(API_URL);

  if (!response.ok) {
    const errorBody = await response.text();
    // redirect 500?
  } else {
    const data: APIPagebleResponse<Product> = await response.json();
    products = data.content;
    // if products.size = 0 //redirect 404
    currentPage = data.number + 1;
    totalPages = data.totalPages;
    pageSize = data.size;
  }
} catch (error) {
  // redirect 500?
  console.error("Failed to fetch products:", error);
}
---

<MainLayout tabTitle="Our Watches" activeTab="products">
  <h1 class="mb-2">Explore Our Watches</h1>
  <div class="flex-row mb-1 w-100 gap-1">
    <SearchBar pathname={Astro.url} client:load/>
    <AdvancedFiltersButton client:load />
  </div>
  <AdvancedFilters pathname={Astro.url} client:load />
  {products && products.length > 0 ? ( 
      <div class="products-grid">
      {products.map((item: Product) => ( 
        <a class="w-100" href={"/products/" + item.publicUrl} aria-label="Product page">
          <div class="product-card">
            <button class="icon-btn cart-button"><img src="/icons/cart.svg" width="16" height="16" loading="lazy"/></button>
            <img src="/images/prx.png" loading="lazy" class={item.stock <= 0 ? "disabled-image" : ""}/>
            <div class="w-100">
                <h2>{item.name} <span>- {item.brand} - {item.mechanism}</span></h2>
                <p>{item.description}</p>
                <p class="price">{priceFormatter(item.price)} â‚¬</p>
            </div>
          </div>
        </a>
      ))}
    </div>
    <Pagination pages={totalPages} currentPage={currentPage} baseUrl={Astro.url}/>
  ) :  (
    <div class="flex-col w-100 align-center">
      <h2 class="mb-1">Ups...</h2>
      <p>No items found were found for your current filters.</p>
    </div>
  )}
</MainLayout>


<!-- const query = incomingSearchParams.get("query") || "";
const mechansim = incomingSearchParams.get("query") || "";
const currentSearchParams =  {
  query: incomingSearchParams.get("query") || "",
  mechansim: incomingSearchParams.get("query") || "",
  maxPrice: incomingSearchParams.get("maxPrice") || Infinity,
  minPrice: incomingSearchParams.get("minPrice") || 0,
} -->