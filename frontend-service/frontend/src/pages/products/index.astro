---
import MainLayout from "../../layout/MainLayout.astro";
import type { Product } from "../../types/Product.ts";
import type { APIPagebleResponse } from "../../types/APIPagebleResponse.ts";
import Pagination from "../../components/Pagination.astro";
import SearchBar from "../../components/SearchBar";

const incomingSearchParams = Astro.url.searchParams;
const apiParams = new URLSearchParams();
incomingSearchParams.forEach((value, key) => {
    apiParams.append(key, value);
});

const query = incomingSearchParams.get('query') || '';

const API_BASE_URL = 'http://localhost:8090/api/v1/products';
const API_URL = `${API_BASE_URL}?${apiParams.toString()}`;

let products: Product[] = [];
let currentPage = 1;
let totalPages = 0;
let pageSize = 8;

try {
  const response = await fetch(API_URL);

  if (!response.ok) {
    const errorBody = await response.text();
    // redirect 500?
  } else {
    const data: APIPagebleResponse<Product> = await response.json();
    products = data.content;
    // if products.size = 0 //redirect 404
    currentPage = data.number + 1;
    totalPages = data.totalPages;
    pageSize = data.size;
  }
} catch (error) {
  // redirect 500?
  console.error("Failed to fetch products:", error);
}

---

<MainLayout tabTitle="Home page!" activeTab="products">
  <h1 class="mb-2">Explore Our Watches</h1>
  <SearchBar query={query} currentSearchParams={incomingSearchParams} pathname={Astro.url} client:load/>
  {products && products.length > 0 ? ( 
      <div class="products-grid">
      {products.map((item: Product) => ( 
        <a class="w-100" href={"/products/" + item.publicUrl} target="_blank">
          <div class="product-card">
            <button class="icon-btn cart-button"><img src="/icons/cart.svg" width="16" height="16" loading="lazy"/></button>
            <img src="/images/prx.png" loading="lazy"/>
            <div class="w-100">
                <h2>{item.name} <span>- {item.brand} - {item.mechanism}</span></h2>
                <p>{item.description}</p>
                <p class="price">{item.price.toFixed(2)} â‚¬</p>
            </div>
          </div>
        </a>
      ))}
    </div>
    <Pagination pages={totalPages} currentPage={currentPage} baseUrl={Astro.url}/>
  ) : (
    <p>No items found or an error occurred while fetching items.</p>
  )}
</MainLayout>